def load(newPart,it):
    it['PROJ-ADAF-4984-STAN-01']['rawParts'] = [{'kicadBom': [], 'eagleBom': [{'Part': 'C1', 'Value': '1uF', 'Device': 'CAP_CERAMIC0603_NO', 'Package': '0603-NO', 'Description': 'Ceramic Capacitors', 'BOM': ''}, {'Part': 'FID1', 'Value': 'FIDUCIAL_1MM', 'Device': 'FIDUCIAL_1MM', 'Package': 'FIDUCIAL_1MM', 'Description': 'Fiducial Alignment Points', 'BOM': 'EXCLUDE'}, {'Part': 'FID2', 'Value': 'FIDUCIAL_1MM', 'Device': 'FIDUCIAL_1MM', 'Package': 'FIDUCIAL_1MM', 'Description': 'Fiducial Alignment Points', 'BOM': 'EXCLUDE'}, {'Part': 'JP1', 'Value': '', 'Device': 'HEADER-1X3ROUND', 'Package': '1X03_ROUND', 'Description': 'PIN HEADER', 'BOM': ''}, {'Part': 'JP3', 'Value': '', 'Device': 'HEADER-1X11', 'Package': '1X11_ROUND', 'Description': '', 'BOM': ''}, {'Part': 'R1', 'Value': '10K', 'Device': 'RESISTOR_4PACK', 'Package': 'RESPACK_4X0603', 'Description': 'Resistor Packs (4 resistors)', 'BOM': ''}, {'Part': 'R2', 'Value': '220', 'Device': 'RESISTOR_4PACK', 'Package': 'RESPACK_4X0603', 'Description': 'Resistor Packs (4 resistors)', 'BOM': ''}, {'Part': 'R5', 'Value': '220', 'Device': 'RESISTOR_4PACK', 'Package': 'RESPACK_4X0603', 'Description': 'Resistor Packs (4 resistors)', 'BOM': ''}, {'Part': 'U$32', 'Value': 'MOUNTINGHOLE2.5', 'Device': 'MOUNTINGHOLE2.5', 'Package': 'MOUNTINGHOLE_2.5_PLATED', 'Description': 'Mounting Hole', 'BOM': 'EXCLUDE'}, {'Part': 'U$33', 'Value': 'MOUNTINGHOLE2.5', 'Device': 'MOUNTINGHOLE2.5', 'Package': 'MOUNTINGHOLE_2.5_PLATED', 'Description': 'Mounting Hole', 'BOM': 'EXCLUDE'}, {'Part': 'U2', 'Value': '24LC02BT-I/OT', 'Device': 'EEPROM_I2C_MCP24AA32', 'Package': 'SOT23-5', 'Description': 'Microchip 32K (4K x 8) 1.8V I2C EEPROM', 'BOM': ''}, {'Part': 'X1', 'Value': '47151-0001', 'Device': 'HDMI_MOLEX_47151', 'Package': 'HDMI_MOLEX_47151-0001', 'Description': 'The default footprint uses layer 46 (Milling) for the tabs, the DIMLAYER footprint uses layer 20 (Dimensions).  Both will probably require special instructions to the board house', 'BOM': ''}]}, {}, {}, {}, {}, {}, {}]
